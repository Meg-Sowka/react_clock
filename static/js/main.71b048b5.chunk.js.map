{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","prevProps","prevState","name","props","console","debug","info","toUTCString","slice","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","addClock","handleDocumentContextMenu","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBM,EAA4BC,GACzCD,EAAUE,OAASN,KAAKO,MAAMD,MAEhCE,QAAQC,MAAR,uBAA8BL,EAAUE,KAAxC,eAAmDN,KAAKO,MAAMD,OAG5DD,EAAUR,OAASG,KAAKJ,MAAMC,MAEhCW,QAAQE,KAAKV,KAAKJ,MAAMC,KAAKc,cAAcC,OAAO,IAAK,MArB7D,kCAyBE,WACEX,OAAOY,cAAcb,KAAKD,WA1B9B,oBA6BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAS,EAASN,KAAKO,MAAdD,KAER,OACE,sBAAKQ,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,IAGF,YAED,sBAAMQ,UAAU,cAAhB,SACGjB,EAAKc,cAAcC,OAAO,IAAK,YA1C1C,GAA2BG,aCD3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBK,GAGX,IAAMG,EAAb,4MACExB,MAAyB,CACvByB,UAAU,EACVC,UAAW,WAHf,EAMEvB,QAAU,EANZ,EAuBEwB,SAAW,WACT,EAAKpB,SAAS,CAAEkB,UAAU,KAxB9B,EA2BEG,0BAA4B,SAACC,GAC3BA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEkB,UAAU,KA9B9B,uDAQE,WAA2B,IAAD,OACxBM,SAASC,iBAAiB,cAAe5B,KAAKwB,2BAC9CG,SAASC,iBAAiB,QAAS5B,KAAKuB,UAExCvB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,QAdP,kCAiBE,WACEW,SAASE,oBAAoB,cAAe7B,KAAKwB,2BACjDG,SAASE,oBAAoB,QAAS7B,KAAKuB,UAC3CtB,OAAOY,cAAcb,KAAKD,WApB9B,oBAiCE,WACE,OACE,sBAAKe,UAAU,MAAf,UACE,6CAEEd,KAAKJ,MAAMyB,UACX,cAAC,EAAD,CAAOf,KAAMN,KAAKJ,MAAM0B,mBAvClC,GAAyBP,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.71b048b5.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ninterface Props {\n  name: string;\n}\n\ninterface State {\n  date: Date;\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    if (prevState.date !== this.state.date) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render(): ReactNode {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleDocumentContextMenu);\n    document.addEventListener('click', this.addClock);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.handleDocumentContextMenu);\n    document.removeEventListener('click', this.addClock);\n    window.clearInterval(this.timerId);\n  }\n\n  addClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleDocumentContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { this.state.hasClock && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}